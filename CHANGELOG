==SVN

* Refactored ServerSide::Static to use HTTP::Caching code.

* Added spec coverage rake task.

* Added HTTP::Caching module.

* Added response_headers attribute to HTTP::Request.

* Refactored ServerSide::Static constants.

* Renamed ServerSide::StaticFiles to ServerSide::Static.

* Added static_server.rb script.

==0.2.7

* Wrote spec for HTTP::Connection.

* Added spec files to rake stats reporting.

* Changed @conn to @socket in both HTTP::Connection and HTTP::Request for better readability.

* Wrote functional test for request body (but at least some of the testing should be in a unit test.)

* Added request body parsing (both URL-encoded and multipart.)

* Moved all HTTP::Const constants into HTTP::Request.

* Added Date to response headers. This is needed for caching to work correctly.

* Fixed bug in serverside script that caused an exception when specifying port number.

==0.2.6

* Refactored HTTP-related code into a new HTTP::Request class and a simplified HTTP::Connection.

* Another small change to docs.

* Fixed small error in Rakefile that prevented doc_rforge task from updating the docs.

* Fixed minor documentation error.

==0.2.5

* Added template serving to static file module.

* Wrote a simple ERB template system.

* More documentation tweaks.

* Changed how response cookies are formatted for somewhat better performance.

* Updated documentation.

* Removed deprecated code in lib/serverside/application.rb.

* Added HTTP cookie functionality (parse, set and delete.)

* Updated rakefile to include a spec task, as well as an rcov task. Updated test task to include spec and rcov tasks.

* Started writing RSpec tests. This looks like a very interesting concept.

* Added /test/spec directory.

==0.2.0

* Updated RFuzz script to work, but it doesn't still do anything interesting.

* Added a serve command to serverside script.

* Changed substition of embedded parameters from (.*) to (.+).

* Added rule compilation after setting the default handler.

* Added doc_rforge rake task (for updating the docs on rubyforge.org).

* Added stats and svn_add rake tasks.

* Fixed routing unit tests.

* Added Router.has_routes? method.

* Finished unit tests for routing.

* Added Connection::Base.redirect.

* Added routing code from /research/routing, implemented functional test.

* Learned about the (?:) modifier and fixed the request parsing regexp.

* Added a profiled version of a static server - /test/functional/static_profile.rb.

* Added freezing of HTTP headers.

* Small change to documentation.
 
* Changed filename for cluster pid file to serverside_cluster.pid.

* Added documentation.

* Fixed require in serverside script to load the gem.

* Fixed the Daemon pid file for static file server mode.

* Added directory listing to static file server.

* Fixed request header parsing Regexp so a trailing slash would be ignored. 

* Added static application. Using the binary script in static mode works.

* Added cluster class with unit tests.

* Added unit tests for static server.

* Added static server functional test.

* Added static file serving code.

* Renamed ServerSide::Request to ServerSide::Connection. This is more appropriate.

* Added functional static server test.

* Added test/functional for functional tests. Updated Rakefile.

* Added Request.send_response and stream.

* Added faster Symbol.to_s to core_ext.

* Added HTTP parsing code with unit tests.

* More unit tests for application code.

* Basic server code works with unit tests.

* Added option parsing to serverside script.

* Added daemon code and unit tests.

==0.1

* Added host attribute to Controller::Request.

* Added ability to create rules on any request attribute, not just path.

* Added ability to mount controllers with a block for a rule.

* Wrote object extensions to create frozen constants on the fly.

* Changed DirHandler to use frozen strings for cache header.

* Hooked Mongrel server to Controller::Router.

* Imported request code with unit tests.

* Wrote unit tests for daemon module.

* Wrote unit tests for controller routing code.

* Refactored controller routing code.

* Imported unit tests for extensions.

* Created Rakefile.

* Prototypical routing code.

* Fixed location of daemon pid files.

* Imported Mongrel code from Reality project.

* Imported extensions from Reality project.

* Implemented daemon and server cluster.
