*SVN*

* Changed substition of embedded parameters from (.*) to (.+).

* Added rule compilation after setting the default handler.

* Added doc_rforge rake task (for updating the docs on rubyforge.org).

* Added stats and svn_add rake tasks.

* Fixed routing unit tests.

* Added Router.has_routes? method.

* Finished unit tests for routing.

* Added Connection::Base.redirect.

* Added routing code from /research/routing, implemented functional test.

* Learned about the (?:) modifier and fixed the request parsing regexp.

* Added a profiled version of a static server - /test/functional/static_profile.rb.

* Added freezing of HTTP headers.

* Small change to documentation.
 
* Changed filename for cluster pid file to serverside_cluster.pid.

* Added documentation.

* Fixed require in serverside script to load the gem.

* Fixed the Daemon pid file for static file server mode.

* Added directory listing to static file server.

* Fixed request header parsing Regexp so a trailing slash would be ignored. 

* Added static application. Using the binary script in static mode works.

* Added cluster class with unit tests.

* Added unit tests for static server.

* Added static server functional test.

* Added static file serving code.

* Renamed ServerSide::Request to ServerSide::Connection. This is more appropriate.

* Added functional static server test.

* Added test/functional for functional tests. Updated Rakefile.

* Added Request.send_response and stream.

* Added faster Symbol.to_s to core_ext.

* Added HTTP parsing code with unit tests.

* Started adding request code.

* More unit tests for application code.

* Basic server code works with unit tests.

* Started work on application code.

* Added option parsing to serverside script.

* Added daemon code and unit tests.

* Created serverside script.

* Created Gem spec.

* Created directory structure.

*Mongrel-based branch*

* Added host attribute to Controller::Request.

* Added ability to create rules on any request attribute, not just path.

* Added ability to mount controllers with a block for a rule.

* Wrote object extensions to create frozen constants on the fly.

* Changed DirHandler to use frozen strings for cache header.

* Hooked Mongrel server to Controller::Router.

* Imported request code with unit tests.

* Wrote unit tests for daemon module.

* Wrote unit tests for controller routing code.

* Refactored controller routing code.

* Imported unit tests for extensions.

* Created Rakefile.

* Prototypical routing code.

* Fixed location of daemon pid files.

* Imported Mongrel code from Reality project.

* Imported extensions from Reality project.

* Implemented daemon and server cluster.

* Basic configuration infrastructure is ready.
